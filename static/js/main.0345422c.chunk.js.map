{"version":3,"sources":["utils/theme.js","App.js","index.js","utils/constants.js"],"names":["muiTheme","createMuiTheme","palette","primary","main","THEME_COLORS","PRIMARY","secondary","SECONDARY","background","default","BACKGROUND_COLOR","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","useStyles","makeStyles","toggleButton","textTransform","RenderItem","data","type","number","prsLinks","title","htmlUrl","html_url","login","user","Box","alignItems","bgcolor","grey","borderRadius","display","justifyContent","my","p","Typography","variant","mr","Chip","label","Button","color","onClick","url","window","open","handleClickOnPr","List","disablePadding","ListItem","style","borderBottom","App","styles","useState","tab","setTab","prsData","setPrsData","setPrsLinks","owner","repository","baseBrach","urlData","setUrlData","repoType","setRepoType","prState","setPrState","loading","setLoading","octokit","Octokit","auth","process","handleChange","event","preventDefault","state","target","name","value","a","request","repo","base","per_page","response","useEffect","isEmpty","links","map","textAlign","border","flexDirection","margin","width","m","TextField","placeholder","onChange","autoFocus","mt","mx","ToggleButtonGroup","size","_","newRepoType","exclusive","ToggleButton","className","newPrState","LinearProgress","Tabs","newTab","Tab","Divider","text","boxShadow","height","totalCount","length","itemContent","index","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById","module","exports","BACKGROUND_SECONDARY","BLACK","BLACK_PEARL","BLACK_RUSSIAN","BLUE","CALENDAR","CYAN","DANGER","LIGHT_DANGER","DARK_DISABLE","DARK_GREY","GAINSBORO","GREEN","GREY100","GREY200","GREY300","GREY400","GREY500","GREY600","GREY","HEADER","LIGHT_BLUE","LIGHT_GREY2","LIGHT_GREY","NAVBAR_BG_COLOR","NAVBAR_LINK_SELECTED_COLOR","RED","SECONDARY_LIGHT","SOLITUDE","WHITE","WHITESMOKE","YELLOW"],"mappings":"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","file":"static/js/main.0345422c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport { THEME_COLORS } from './constants';\n\nexport const muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: THEME_COLORS.PRIMARY,\n    },\n    secondary: {\n      main: THEME_COLORS.SECONDARY,\n    },\n    background: {\n      default: THEME_COLORS.BACKGROUND_COLOR,\n    },\n  },\n  typography: {\n    fontFamily: \"'Poppins', sans-serif\",\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightBold: 600,\n  },\n});\n\nexport const selectStyles = {\n  container: provided => ({ ...provided, margin: '0', minWidth: '320px' }),\n};\n\nexport const selectTheme = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: blueGrey[100],\n    primary50: blueGrey[300],\n    primary75: blueGrey[500],\n    primary: blueGrey[700],\n  },\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Octokit } from '@octokit/core';\nimport { Virtuoso } from 'react-virtuoso';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport isEmpty from 'lodash/isEmpty';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chip from '@material-ui/core/Chip';\nimport grey from '@material-ui/core/colors/grey';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  toggleButton: { textTransform: 'none' },\n});\n\nfunction App() {\n  const styles = useStyles();\n  const [tab, setTab] = useState('prs-list');\n  const [prsData, setPrsData] = useState([]);\n  const [prsLinks, setPrsLinks] = useState([]);\n  const [urlData, setUrlData] = useState({\n    owner: 'lalitmee',\n    repository: 'dotfiles',\n    baseBrach: '',\n  });\n  const [repoType, setRepoType] = useState('public');\n  const [prState, setPrState] = useState('open');\n  const [loading, setLoading] = useState(false);\n  const octokit = new Octokit({ auth: process.env.REACT_APP_TOKEN });\n\n  useEffect(() => {\n    if (!isEmpty(prsData)) {\n      setLoading(false);\n      const links = prsData.map(({ html_url: htmlUrl }) => htmlUrl);\n      setPrsLinks(links);\n    }\n  }, [prsData]);\n\n  function handleChange(event) {\n    event.preventDefault();\n    setUrlData(state => ({\n      ...state,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function handlePrStateChange(_, newPrState) {\n    setPrState(newPrState);\n  }\n\n  function handleRepoTypeChange(_, newRepoType) {\n    setRepoType(newRepoType);\n  }\n\n  async function getData() {\n    setLoading(true);\n    const { owner, repository, baseBrach } = urlData || {};\n    if (owner && repository) {\n      const response = await octokit.request(\n        'GET /repos/{owner}/{repo}/pulls',\n        {\n          owner,\n          repo: repository,\n          type: repoType,\n          state: prState,\n          base: baseBrach,\n          per_page: 100,\n        },\n      );\n      const { data = [] } = response || {};\n      setPrsData(data);\n    }\n  }\n\n  function handleTabChange(event, newTab) {\n    setTab(newTab);\n  }\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"h5\">PRs Merged Since</Typography>\n      <Box\n        alignItems=\"center\"\n        border={`1px solid ${grey[300]}`}\n        borderRadius={4}\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n        my={2}\n      >\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n          margin=\"auto\"\n          width={1}\n        >\n          <Box display=\"flex\" m={1}>\n            <TextField\n              name=\"owner\"\n              variant=\"outlined\"\n              label=\"Owner\"\n              placeholder=\"Enter User/Owner\"\n              value={urlData.owner}\n              onChange={handleChange}\n              autoFocus\n            />\n          </Box>\n          <Box display=\"flex\" m={1}>\n            <TextField\n              name=\"repository\"\n              variant=\"outlined\"\n              label=\"Repository\"\n              placeholder=\"Enter Repository\"\n              value={urlData.repository}\n              onChange={handleChange}\n              autoFocus\n            />\n          </Box>\n          <Box display=\"flex\" m={1}>\n            <TextField\n              name=\"baseBrach\"\n              variant=\"outlined\"\n              label=\"Base Branch\"\n              placeholder=\"Enter Base Branch\"\n              value={urlData.baseBrach}\n              onChange={handleChange}\n              autoFocus\n            />\n          </Box>\n        </Box>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          justifyContent=\"space-around\"\n          mt={2}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"baseline\"\n            mx={2}\n          >\n            <Box mr={1}>\n              <Typography variant=\"subtitle2\">Repo Type</Typography>\n            </Box>\n            <ToggleButtonGroup\n              color=\"secondary\"\n              size=\"small\"\n              value={repoType}\n              onChange={handleRepoTypeChange}\n              exclusive\n            >\n              <ToggleButton value=\"public\" className={styles.toggleButton}>\n                Public\n              </ToggleButton>\n              <ToggleButton value=\"private\" className={styles.toggleButton}>\n                Private\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Box>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"baseline\"\n            mx={2}\n          >\n            <Box mr={1}>\n              <Typography variant=\"subtitle2\">Status</Typography>\n            </Box>\n            <ToggleButtonGroup\n              color=\"secondary\"\n              size=\"small\"\n              value={prState}\n              onChange={handlePrStateChange}\n              exclusive\n            >\n              <ToggleButton value=\"open\" className={styles.toggleButton}>\n                Open\n              </ToggleButton>\n              <ToggleButton value=\"closed\" className={styles.toggleButton}>\n                Closed\n              </ToggleButton>\n              <ToggleButton value=\"all\" className={styles.toggleButton}>\n                All\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Box>\n        </Box>\n      </Box>\n      <Box my={1}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={getData}>\n          Get Data\n        </Button>\n      </Box>\n      {loading && <LinearProgress color=\"primary\" />}\n      {!isEmpty(prsData) && !loading && (\n        <>\n          <Tabs value={tab} onChange={handleTabChange}>\n            <Tab label=\"Prs List\" value=\"prs-list\" />\n            <Tab label=\"Prs Links\" value=\"prs-links\" />\n          </Tabs>\n          <Divider />\n          <Box my={1}>\n            <CopyToClipboard text={prsLinks}>\n              <Button variant=\"outlined\">Copy Links</Button>\n            </CopyToClipboard>\n          </Box>\n          <Box bgcolor={grey[50]} borderRadius={5} boxShadow={3} my={2} p={2}>\n            <Virtuoso\n              style={{ height: 500 }}\n              totalCount={prsData.length}\n              itemContent={index => (\n                <RenderItem type={tab} data={prsData[index]} />\n              )}\n            />\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n\nfunction RenderItem({ data, type, prsLinks }) {\n  const {\n    number,\n    title,\n    html_url: htmlUrl,\n    user: { login },\n  } = data;\n\n  function handleClickOnPr({ url }) {\n    window.open(url, '_blank');\n  }\n\n  return (\n    <>\n      {type === 'prs-list' && (\n        <Box\n          key={number}\n          alignItems=\"center\"\n          bgcolor={grey[200]}\n          borderRadius={5}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          my={1}\n          p={1}\n        >\n          <Typography variant=\"subtitle2\">{title}</Typography>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box mr={1}>\n              <Chip label={login} />\n            </Box>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => handleClickOnPr({ url: htmlUrl })}\n            >\n              {number}\n            </Button>\n          </Box>\n        </Box>\n      )}\n      {type === 'prs-links' && (\n        <List key={number} disablePadding>\n          <ListItem style={{ borderBottom: `1px solid ${grey[300]}` }}>\n            <Typography variant=\"caption\">{htmlUrl}</Typography>\n          </ListItem>\n        </List>\n      )}\n    </>\n  );\n}\n\nRenderItem.propTypes = {\n  data: PropTypes.object,\n  type: PropTypes.string,\n  prsLinks: PropTypes.array,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { muiTheme } from 'utils/theme';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={muiTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","const THEME_COLORS = {\n  BACKGROUND_COLOR: '#E5E5E5',\n  BACKGROUND_SECONDARY: '#C9C9C9',\n  BLACK: '#000000',\n  BLACK_PEARL: '#161E29',\n  BLACK_RUSSIAN: '#151522',\n  BLUE: '#3D9EFF',\n  CALENDAR: '#5C7393',\n  CYAN: '#23A9A1',\n  DANGER: '#FF0202',\n  LIGHT_DANGER: '#D18686',\n  DARK_DISABLE: '#1F1F1F',\n  DARK_GREY: '#7F7F7F',\n  GAINSBORO: '#DFDFDF',\n  GREEN: '#009A5B',\n  GREY100: '#F5F5F5',\n  GREY200: '#EEEEEE',\n  GREY300: '#E0E0E0',\n  GREY400: '#BDBDBD',\n  GREY500: '#9E9E9E',\n  GREY600: '#757575',\n  GREY: '#858585',\n  HEADER: '#696969',\n  LIGHT_BLUE: '#E2F0FF',\n  LIGHT_GREY2: '#A5AEB9',\n  LIGHT_GREY: '#909DA9',\n  NAVBAR_BG_COLOR: '#103F57',\n  NAVBAR_LINK_SELECTED_COLOR: '#0A2938',\n  PRIMARY: '#FF811d',\n  RED: '#FF6060',\n  SECONDARY: '#376F8A',\n  SECONDARY_LIGHT: '#D7DBE0',\n  SOLITUDE: '#EBEDEF',\n  WHITE: '#FFFFFF',\n  WHITESMOKE: '#F8F8F8',\n  YELLOW: '#FFC72A',\n};\n\nmodule.exports = { THEME_COLORS };\n"],"sourceRoot":""}